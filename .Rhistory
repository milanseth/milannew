plot(x = seq(1,nrow(s)), y = s_pct$overall_2020, pch = 15,ylim = c(0,110),las = 1, ylab = "Percent",xlab = "Hospital",axes = F)
points(x = seq(1,nrow(s)), y = s_pct$overall_2022, pch = 17)
for(i in 1:nrow(s)){
lines(x = c(i,i),y = c(s_pct$overall_2020[i],s_pct$overall_2022[i]),col = line_col[i])
}
legend(x = "topright",pch = c(15,17), c("2020","2022"),bty = "n",cex = 2, pt.cex = 2)
legend(x = "topleft", "line is blue if overall optimization rate \n increased at site, and red if it decreased", bty = "n",cex = 2,xpd = T)
axis(side = 2, las = 1, at = seq(0,100,10),cex.axis = 2)
dev.off()
tiff("range_graph.tiff",width = 1000, height = 600)
par(oma = c(2,3,2,2),cex.lab = 2,mar = c(2,4,2,2))
s_pct<- s
s_pct[,2:5]<- 100*s[,2:5]
line_col<- rep("blue",nrow(s))
line_col[s_pct$overall_2022 < s_pct$overall_2020]<- "red"
plot(x = seq(1,nrow(s)), y = s_pct$overall_2020, pch = 15,ylim = c(0,110),las = 1, ylab = "Percent",xlab = "Hospital",axes = F)
points(x = seq(1,nrow(s)), y = s_pct$overall_2022, pch = 17)
for(i in 1:nrow(s)){
lines(x = c(i,i),y = c(s_pct$overall_2020[i],s_pct$overall_2022[i]),col = line_col[i])
}
legend(x = "topright",pch = c(15,17), c("2020","2022"),bty = "n",cex = 2, pt.cex = 2)
legend(x = "topleft", "line is blue if overall optimization rate \n increased at site, and red if it decreased", bty = "n",cex = 2,xpd = T)
axis(side = 2, las = 1, at = seq(0,100,10),cex.axis = 2)
dev.off()
tiff("range_graph.tiff",width = 1000, height = 600)
par(oma = c(2,3,2,2),cex.lab = 2,mar = c(2,6,2,2))
s_pct<- s
s_pct[,2:5]<- 100*s[,2:5]
line_col<- rep("blue",nrow(s))
line_col[s_pct$overall_2022 < s_pct$overall_2020]<- "red"
plot(x = seq(1,nrow(s)), y = s_pct$overall_2020, pch = 15,ylim = c(0,110),las = 1, ylab = "Percent",xlab = "Hospital",axes = F)
points(x = seq(1,nrow(s)), y = s_pct$overall_2022, pch = 17)
for(i in 1:nrow(s)){
lines(x = c(i,i),y = c(s_pct$overall_2020[i],s_pct$overall_2022[i]),col = line_col[i])
}
legend(x = "topright",pch = c(15,17), c("2020","2022"),bty = "n",cex = 2, pt.cex = 2)
legend(x = "topleft", "line is blue if overall optimization rate \n increased at site, and red if it decreased", bty = "n",cex = 2,xpd = T)
axis(side = 2, las = 1, at = seq(0,100,10),cex.axis = 2)
dev.off()
tiff("range_graph.tiff",width = 1000, height = 600)
par(oma = c(2,3,2,2),cex.lab = 2,mar = c(2,6,2,2))
s_pct<- s
s_pct[,2:5]<- 100*s[,2:5]
line_col<- rep("blue",nrow(s))
line_col[s_pct$overall_2022 < s_pct$overall_2020]<- "red"
plot(x = seq(1,nrow(s)), y = s_pct$overall_2020, pch = 15,ylim = c(0,110),las = 1, ylab = "Percent",xlab = "Hospital",axes = F)
points(x = seq(1,nrow(s)), y = s_pct$overall_2022, pch = 17)
for(i in 1:nrow(s)){
lines(x = c(i,i),y = c(s_pct$overall_2020[i],s_pct$overall_2022[i]),col = line_col[i],lwd = 2)
}
legend(x = "topright",pch = c(15,17), c("2020","2022"),bty = "n",cex = 2, pt.cex = 2)
legend(x = "topleft", "line is blue if overall optimization rate \n increased at site, and red if it decreased", bty = "n",cex = 2,xpd = T)
axis(side = 2, las = 1, at = seq(0,100,10),cex.axis = 2)
dev.off()
tiff("range_graph.tiff",width = 1000, height = 600)
par(oma = c(2,3,2,2),cex.lab = 2,mar = c(4,6,2,2))
s_pct<- s
s_pct[,2:5]<- 100*s[,2:5]
line_col<- rep("blue",nrow(s))
line_col[s_pct$overall_2022 < s_pct$overall_2020]<- "red"
plot(x = seq(1,nrow(s)), y = s_pct$overall_2020, pch = 15,ylim = c(0,110),las = 1, ylab = "Percent",xlab = "Hospital",axes = F)
points(x = seq(1,nrow(s)), y = s_pct$overall_2022, pch = 17)
for(i in 1:nrow(s)){
lines(x = c(i,i),y = c(s_pct$overall_2020[i],s_pct$overall_2022[i]),col = line_col[i],lwd = 2)
}
legend(x = "topright",pch = c(15,17), c("2020","2022"),bty = "n",cex = 2, pt.cex = 2)
legend(x = "topleft", "line is blue if overall optimization rate \n increased at site, and red if it decreased", bty = "n",cex = 2,xpd = T)
axis(side = 2, las = 1, at = seq(0,100,10),cex.axis = 2)
dev.off()
tiff("range_graph.tiff",width = 1000, height = 600)
par(oma = c(2,3,2,2),cex.lab = 2,mar = c(4,6,2,2))
s_pct<- s
s_pct[,2:5]<- 100*s[,2:5]
line_col<- rep("blue",nrow(s))
line_col[s_pct$overall_2022 < s_pct$overall_2020]<- "red"
plot(x = seq(1,nrow(s)), y = s_pct$overall_2020, pch = 15,ylim = c(0,110),las = 1, ylab = "",xlab = "Hospital",axes = F)
mtext(side = 2, line = 5, "Percent")
points(x = seq(1,nrow(s)), y = s_pct$overall_2022, pch = 17)
for(i in 1:nrow(s)){
lines(x = c(i,i),y = c(s_pct$overall_2020[i],s_pct$overall_2022[i]),col = line_col[i],lwd = 2)
}
legend(x = "topright",pch = c(15,17), c("2020","2022"),bty = "n",cex = 2, pt.cex = 2)
legend(x = "topleft", "line is blue if overall optimization rate \n increased at site, and red if it decreased", bty = "n",cex = 2,xpd = T)
axis(side = 2, las = 1, at = seq(0,100,10),cex.axis = 2)
dev.off()
tiff("range_graph.tiff",width = 1000, height = 600)
par(oma = c(2,3,2,2),cex.lab = 2,mar = c(4,6,2,2))
s_pct<- s
s_pct[,2:5]<- 100*s[,2:5]
line_col<- rep("blue",nrow(s))
line_col[s_pct$overall_2022 < s_pct$overall_2020]<- "red"
plot(x = seq(1,nrow(s)), y = s_pct$overall_2020, pch = 15,ylim = c(0,110),las = 1, ylab = "",xlab = "Hospital",axes = F)
mtext(side = 2, line = 5, "Percent",cex = 2)
points(x = seq(1,nrow(s)), y = s_pct$overall_2022, pch = 17)
for(i in 1:nrow(s)){
lines(x = c(i,i),y = c(s_pct$overall_2020[i],s_pct$overall_2022[i]),col = line_col[i],lwd = 2)
}
legend(x = "topright",pch = c(15,17), c("2020","2022"),bty = "n",cex = 2, pt.cex = 2)
legend(x = "topleft", "line is blue if overall optimization rate \n increased at site, and red if it decreased", bty = "n",cex = 2,xpd = T)
axis(side = 2, las = 1, at = seq(0,100,10),cex.axis = 2)
dev.off()
tiff("range_graph.tiff",width = 1000, height = 600)
par(oma = c(2,3,2,2),cex.lab = 2,mar = c(4,6,2,2))
s_pct<- s
s_pct[,2:5]<- 100*s[,2:5]
line_col<- rep("blue",nrow(s))
line_col[s_pct$overall_2022 < s_pct$overall_2020]<- "red"
plot(x = seq(1,nrow(s)), y = s_pct$overall_2020, pch = 15,ylim = c(0,110),las = 1, ylab = "",xlab = "Hospital",axes = F,cex = 2)
mtext(side = 2, line = 5, "Percent",cex = 2)
points(x = seq(1,nrow(s)), y = s_pct$overall_2022, pch = 17,cex = 2)
for(i in 1:nrow(s)){
lines(x = c(i,i),y = c(s_pct$overall_2020[i],s_pct$overall_2022[i]),col = line_col[i],lwd = 2)
}
legend(x = "topright",pch = c(15,17), c("2020","2022"),bty = "n",cex = 2, pt.cex = 2)
legend(x = "topleft", "line is blue if overall optimization rate \n increased at site, and red if it decreased", bty = "n",cex = 2,xpd = T)
axis(side = 2, las = 1, at = seq(0,100,10),cex.axis = 2)
dev.off()
t1<- table(paste(rpt98$discharge_year,rpt98$discharge_quarter,sep = "Q"),rpt98$ivus_oct_post)[29:42,]
t2<- table(paste(rpt98$discharge_year,rpt98$discharge_quarter,sep = "Q"),rpt98$ivus_oct_lm_isr_ist)[29:42,]
cbind(prop.table(t1,1)[,2],prop.table(t2,1)[,2])
rpt98<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/analytics.rpt98_pci5_report_procedure.rds")
k<- duplicated(rpt98$ncdr_labvisitoccurrencekey)
rpt98<- rpt98[!k,]
t1<- table(paste(rpt98$discharge_year,rpt98$discharge_quarter,sep = "Q"),rpt98$ivus_oct_post)[29:42,]
t2<- table(paste(rpt98$discharge_year,rpt98$discharge_quarter,sep = "Q"),rpt98$ivus_oct_lm_isr_ist)[29:42,]
cbind(prop.table(t1,1)[,2],prop.table(t2,1)[,2])
t1<- table(paste(rpt98$discharge_year,rpt98$discharge_quarter,sep = "Q"),rpt98$ivus_oct_post)[30:43,]
t2<- table(paste(rpt98$discharge_year,rpt98$discharge_quarter,sep = "Q"),rpt98$ivus_oct_lm_isr_ist)[30:43,]
cbind(prop.table(t1,1)[,2],prop.table(t2,1)[,2])
load("~/Format data 2022Q4/formatted_tables_6_8_2023.RData")
library(readxl)
dci_vals<- read_excel("~/Downloads/EIGs-Distressed-Communities-Index-2014-2018-Score-Only.xlsx")
View(dci_vals)
rpt99<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/analytics.rpt99_pci5_report_discharge.rds")
k<- duplicated(rpt99$visitoccurrencekey)
table(k)
rpt99<- rpt99[!k,]
dim(rpt99)
grep("zip",names(rpt99))
names(tables)
grep("Zip",dd_v5$DataElementShortName)
grep("Zip",dd_v5$DataElementShortName,ignore.case = T)
View(dd_v5)
submissionpatient<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/ncdr5.submissionpatient.rds")
names(submissionpatient)
submission<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/ncdr5.submission.rds")
names(submission)
names(tables[["vovisitoccurrence"]])
length(unique(submissionpatient$submissionkey))
length(unique(submissionpatient$clientpatientkey))
dim(submissionpatient)
length(unique(paste(submissionpatient$submissionkey,submissionpatient$clientpatientkey))
)
submissionpatient<- merge(submissionpatient,tables["vovisitoccurrence"][,1:3])
submissionpatient<- merge(submissionpatient,tables[["vovisitoccurrence"]][,1:3])
length(unique(submissionpatient$visitoccurrencekey))
table(is.na(submissionpatient$zipcode))
table((submissionpatient$zipcodena))
table((submissionpatient$zipcodena),useNA = "ifany")
dim(rpt99)
rpt99<- merge(rpt99,submissionpatient[,c("visitoccurrencekey","zipcode","zipcodena")])
table(is.na(rpt99$zipcode))
table(rpt99$discharge_yearis.na(rpt99$zipcode))
table(rpt99$discharge_year,is.na(rpt99$zipcode))
dim(rpt99)
names(tables)
client<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/ncdr5.client.rds")
names(client)
hosps<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/analytics.viw_hospitals_current_pci_all.rds")
names(hosps)
names(client)
client<- merge(client, hosps[,c("hos_code","ncdr_client_id")],
by.x = "partid",
by.y = "ncdr_client_id")
View(client)
client0<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/ncdr5.client.rds")
hosps<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/analytics.viw_hospitals_current_pci_all.rds")
client<- merge(client0, hosps[,c("hos_code","ncdr_client_id")],
by.x = "partid",
by.y = "ncdr_client_id")
View(subset(client0,!(partid %in% client$partid )))
names(submission)
table(submission$clientid == 335815)
table(submission$clientkey == 6007)
table(client0$clientkey, client0$clientkey %in% submission$clientkey)
ad1<- subset(rpt99, discharge_date >= as.Date("2018-04-01"))
table(ad1$zipcode %in% dci_vals$Zipcode)
table(ad1$zipcode %in% dci_vals$Zipcode,is.na(ad1$zipcode))
table(ad1$zipcode %in% dci_vals$Zipcode,is.na(ad1$zipcode),useNA = "ifany")
ad2<- merge(ad1,dci_vals,
by.x = "zipcode",
by.y = "Zipcode")
dim(ad2)
library(stringr)
table(str_length(dci_vals$Zipcode))
names(dci_vals)
table(ad2$`State Abbreviation`)
rpt98<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/analytics.rpt98_pci5_report_procedure.rds")
k<- duplicated(rpt98$ncdr_labvisitoccurrencekey)
table(k)
rpt98<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/analytics.rpt98_pci5_report_procedure.rds")
k<- duplicated(rpt98$ncdr_labvisitoccurrencekey)
rpt98<- rpt98[!k,]
names(rpt98)
dim(rpt98)
length(unique(paste(rpt98$ncdr_visitoccurrencekey,rpt98$startdatetime)))
class(rpt98$startdatetime)
rpt98$startdatetime[1:10]
as.POSIXct(rpt98$startdatetime[1:10])
rpt98$proc_start_datetime<- as.POSIXct(rpt98$startdatetime)
rpt98<- rpt98[order(rpt98$proc_start_datetime,increasing = T),]
rpt98<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/analytics.rpt98_pci5_report_procedure.rds")
k<- duplicated(rpt98$ncdr_labvisitoccurrencekey)
rpt98<- rpt98[!k,]
rpt98$proc_start_datetime<- as.POSIXct(rpt98$startdatetime)
rpt98<- rpt98[order(rpt98$proc_start_datetime,increasing = T),]
table(is.na(rpt98$proc_start_datetime))
test<- order(rpt98$proc_start_datetime,increasing = T)
test<- order(rpt98$proc_start_datetime,decreasing = F)
rpt98<- readRDS("~/PCI-Data-2022q4/PCI-Data-2022q4/analytics.rpt98_pci5_report_procedure.rds")
k<- duplicated(rpt98$ncdr_labvisitoccurrencekey)
rpt98<- rpt98[!k,]
rpt98$proc_start_datetime<- as.POSIXct(rpt98$startdatetime)
rpt98<- rpt98[order(rpt98$proc_start_datetime,decreasing = F),]
k<- duplicated(rpt98$ncdr_visitoccurrencekey)
rpt98$proc_start_datetime[1:10]
k<- duplicated(rpt98$ncdr_visitoccurrencekey)
rpt98_first_lv<- rpt98[!k,]
names(ad2)
ad3<- merge(ad2,
rpt98_first_lv,
by.x = "visitoccurrencekey",
by.y = "ncdr_visitoccurrencekey")
library(doBy)
library(doBy)
ad3$DCI_pat_zip<- ad3$`Distress Score`
s<- summaryBy(DCI_pat_zip ~ hos_code, data = ad3)
View(s)
names(rpt98)
names(ad3)
rpt98_first_lv$visitoccurrencekey <- rpt98_first_lv$ncdr_visitoccurrencekey
ad3<- merge(ad2,
rpt98_first_lv)
library(doBy)
ad3$DCI_pat_zip<- ad3$`Distress Score`
s<- summaryBy(DCI_pat_zip ~ hos_code, data = ad3)
s
quantile(s$DCI_pat_zip.mean)
ad3$site_avg_DCI_q1<- ad3$hos_code %in% s$hos_code[s$DCI_pat_zip.mean <= 32]
ad3$site_avg_DCI_q4<- ad3$hos_code %in% s$hos_code[s$DCI_pat_zip.mean > 57]
ad3$site_avg_DCI_quartile<- NA
ad3$site_avg_DCI_quartile[ad3$hos_code %in% s$hos_code[s$DCI_pat_zip.mean <= 32]]<- "Q1"
ad3$site_avg_DCI_quartile[ad3$hos_code %in% s$hos_code[s$DCI_pat_zip.mean > 57]]<- "Q4"
t<- table(ad3$phys_npi,ad3$site_avg_DCI_quartile)
t
phys_in_both<- t[t{,1} > 0 & t[,2] > 0,]
t<- table(ad3$phys_npi,ad3$site_avg_DCI_quartile)
phys_in_both<- t[t{,1] > 0 & t[,2] > 0,]
phys_in_both<- t[t[,1] > 0 & t[,2] > 0,]
phys_in_both
dim(ad3)
ad3<- merge(ad2,
rpt98_first_lv[,c("visitoccurrencekey","phys_npi")])
library(doBy)
ad3$DCI_pat_zip<- ad3$`Distress Score`
s<- summaryBy(DCI_pat_zip ~ hos_code, data = ad3)
quantile(s$DCI_pat_zip.mean)
ad3$site_avg_DCI_quartile<- NA
ad3$site_avg_DCI_quartile[ad3$hos_code %in% s$hos_code[s$DCI_pat_zip.mean <= 32]]<- "Q1"
ad3$site_avg_DCI_quartile[ad3$hos_code %in% s$hos_code[s$DCI_pat_zip.mean > 57]]<- "Q4"
t<- table(ad3$phys_npi,ad3$site_avg_DCI_quartile)
phys_in_both<- t[t[,1] > 0 & t[,2] > 0,]
phys_in_both
dim(phys_in_both)
phys_in_both<- t[t[,1] >= 30 & t[,2] >= 30,]
phys_in_both
library(doBy)
ad3$DCI_pat_zip<- ad3$`Distress Score`
s<- summaryBy(DCI_pat_zip ~ hos_code, data = ad3)
quantile(s$DCI_pat_zip.mean)
rpt98_first_lv$site_avg_DCI_quartile<- NA
rpt98_first_lv$site_avg_DCI_quartile[rpt98_first_lv$hos_code %in% s$hos_code[s$DCI_pat_zip.mean <= 32]]<- "Q1"
rpt98_first_lv$site_avg_DCI_quartile[rpt98_first_lv$hos_code %in% s$hos_code[s$DCI_pat_zip.mean > 57]]<- "Q4"
t<- table(rpt98_first_lv$phys_npi,rpt98_first_lv$site_avg_DCI_quartile)
phys_in_both<- t[t[,1] >= 30 & t[,2] >= 30,]
phys_in_both
table(rpt98_first_lv$ncdrver)
ad<- subset(rpt98_first_lv,ncdrver == 5)
t<- table(ad$phys_npi,ad$site_avg_DCI_quartile)
phys_in_both<- t[t[,1] >= 30 & t[,2] >= 30,]
phys_in_both
dim(phys_in_both)
sum(phys_in_both[,1])
sum(phys_in_both[,2])
ad_comp<- subset(ad, phys_npi %in% rownames(phys_in_both))
dim(ad_comp)
table(ad_comp$site_avg_DCI_quartile,useNA = "ifany")
table(ad_comp$phys_npi,ad_comp$site_avg_DCI_quartile,useNA = "ifany")
table(ad_comp$phys_npi,ad_comp$cin,useNA = "ifany")
table(ad_comp$phys_npi,ad_comp$cin,useNA = "ifany",ad_comp$site_avg_DCI_quartile)
table(ad_comp$phys_npi,ad_comp$cin,ad_comp$site_avg_DCI_quartile)
t<- table(ad_comp$phys_npi,ad_comp$cin,ad_comp$site_avg_DCI_quartile)
prop.table(t, c(1,3))
table(rpt99$card_rehab_liaison)
table(rpt99$cardiac_rehab_referral)
ad_comp
t<- table(ad$phys_npi,ad$site_avg_DCI_quartile)
phys_in_both<- t[t[,1] >= 20 & t[,2] >= 20,]
phys_in_both
dim(phys_in_both)
sum(phys_in_both[,1])
sum(phys_in_both[,2])
ad_comp<- subset(ad, phys_npi %in% rownames(phys_in_both))
table(ad_comp$phys_npi,ad_comp$hos_code)
hosps
names(operator)
View(subset(operator, operatornpi %in% rownames(phys_in_both)))
View(subset(operator, operatornpi %in% rownames(phys_in_both))[,c("operatornpi","operatorfullname")])
View(unique(subset(operator, operatornpi %in% rownames(phys_in_both))[,c("operatornpi","operatorfullname")]))
op_names<- unique(subset(operator, operatornpi %in% rownames(phys_in_both))[,c("operatornpi","operatorfullname")])
k<- duplicated(op_names$operatornpi)
table(k)
dim(phys_in_both)
op_names<- op_names[!k,]
op_names
s
subset(s, hos_code %in% ad_comp$hos_code)
ad_comp<- subset(ad, phys_npi %in% rownames(phys_in_both) & !is.na(site_avg_DCI_quartile))
table(ad_comp$phys_npi,ad_comp$hos_code)
subset(s, hos_code %in% ad_comp$hos_code)
quantile(s$DCI_pat_zip.mean)
ad3$DCI_pat_zip<- ad3$`Distress Score`
s<- summaryBy(DCI_pat_zip ~ hos_code, data = ad3)
quantile(s$DCI_pat_zip.mean)
rpt98_first_lv$site_avg_DCI_quartile<- NA
rpt98_first_lv$site_avg_DCI_quartile[rpt98_first_lv$hos_code %in% s$hos_code[s$DCI_pat_zip.mean <= 33]]<- "Q1"
rpt98_first_lv$site_avg_DCI_quartile[rpt98_first_lv$hos_code %in% s$hos_code[s$DCI_pat_zip.mean > 57]]<- "Q4"
ad<- merge(subset(rpt98_first_lv,ncdrver == 5),rpt99[,c()]
t<- table(ad$phys_npi,ad$site_avg_DCI_quartile)
rpt98_first_lv$site_avg_DCI_quartile<- NA
rpt98_first_lv$site_avg_DCI_quartile[rpt98_first_lv$hos_code %in% s$hos_code[s$DCI_pat_zip.mean <= 33]]<- "Q1"
rpt98_first_lv$site_avg_DCI_quartile[rpt98_first_lv$hos_code %in% s$hos_code[s$DCI_pat_zip.mean > 57]]<- "Q4"
ad<- subset(rpt98_first_lv,ncdrver == 5)
t<- table(ad$phys_npi,ad$site_avg_DCI_quartile)
phys_in_both<- t[t[,1] >= 20 & t[,2] >= 20,]
ad_comp<- subset(ad, phys_npi %in% rownames(phys_in_both) & !is.na(site_avg_DCI_quartile))
table(ad_comp$phys_npi,ad_comp$hos_code)
op_names<- unique(subset(operator, operatornpi %in% rownames(phys_in_both))[,c("operatornpi","operatorfullname")])
k<- duplicated(op_names$operatornpi)
op_names<- op_names[!k,]
s
boxplot(s[,2])
quantile(s[,2])
rpt98_first_lv$site_avg_DCI_quartile<- NA
rpt98_first_lv$site_avg_DCI_quartile[rpt98_first_lv$hos_code %in% s$hos_code[s$DCI_pat_zip.mean <= 33.6885]]<- "Q1"
rpt98_first_lv$site_avg_DCI_quartile[rpt98_first_lv$hos_code %in% s$hos_code[s$DCI_pat_zip.mean > 56.3804]]<- "Q4"
ad<- subset(rpt98_first_lv,ncdrver == 5)
t<- table(ad$phys_npi,ad$site_avg_DCI_quartile)
phys_in_both<- t[t[,1] >= 20 & t[,2] >= 20,]
phys_in_both
ad_comp<- subset(ad, phys_npi %in% rownames(phys_in_both) & !is.na(site_avg_DCI_quartile))
table(ad_comp$phys_npi,ad_comp$hos_code)
s
quantile(s[,2])
dim(ad_comp)
table(ad_comp$site_avg_DCI_quartile)
shiny::runApp('Cardiac rehab map search')
library(RDCOMClient)
install.packages("RDCOMClient")
R.version()
?R.Version
R.Version()
library(curl)
?curl
imputed_reduced_df_old   <- readRDS("~/pci prediction models/imputed-reduced-df-all-outcomes.rds")
library(tidyverse)
library(knitr)
library(VIM)
library(caret)
library(doParallel)
load("~/CATHPCI_data_10_30_23/PCI_2023_q2_data.RData")
names(tables)
library(data.table)
NPPES<- fread("/media/milan/easystore/NPPES_10_23/npidata_pfile_20050523-20231008.csv")
dim(NPPES)
names(NPPES)
names(tables)
names(tables$operator)
MI_docs<- subset(NPPES,NPI %in% tables$operator$operatornpi)
NPPES_header<- fread("/media/milan/easystore/NPPES_10_23/npidata_pfile_20050523-20231008_fileheader.csv")
NPPES_header<- read.csv("/media/milan/easystore/NPPES_10_23/npidata_pfile_20050523-20231008_fileheader.csv")
names(MI_docs)
table(MI_docs$`Healthcare Provider Taxonomy Group_1`)
table(MI_docs$`Healthcare Provider Taxonomy Group_2`)
table(MI_docs$`Healthcare Provider Taxonomy Group_3`)
names(NPPES)
table(MI_docs$`Healthcare Provider Taxonomy Group_3`)
table(MI_docs$`Healthcare Provider Taxonomy Group_1`)
table(MI_docs$`Healthcare Provider Taxonomy Code_1`)
table(MI_docs$`Healthcare Provider Taxonomy Code_1` == int_cardiology)
int_cardiology_taxonomy<- "207RI0011X"
table(MI_docs$`Healthcare Provider Taxonomy Code_1` == int_cardiology_taxonomy)
table(MI_docs$`Healthcare Provider Taxonomy Code_2` == int_cardiology_taxonomy)
table(MI_docs$`Healthcare Provider Taxonomy Code_3` == int_cardiology_taxonomy)
table(MI_docs$`Healthcare Provider Taxonomy Code_4` == int_cardiology_taxonomy)
table(MI_docs$`Healthcare Provider Taxonomy Code_5` == int_cardiology_taxonomy)
table(MI_docs$`Healthcare Provider Taxonomy Code_6` == int_cardiology_taxonomy)
table(MI_docs$`Healthcare Provider Taxonomy Code_7` == int_cardiology_taxonomy)
table(MI_docs$`Healthcare Provider Taxonomy Code_7` == int_cardiology_taxonomy)
names(MI_docs)
MI_docs[[ "Provider License Number_1"]][1:10]
MI_docs[[ "Provider License Number State Code_1"       ]][1:10]
MI_docs[[  "Last Update Date"       ]][1:10]
MI_docs$last_update_dt<- as.Date(MI_docs$`Last Update Date`)
min(MI_docs$last_update_dt)
min(MI_docs$last_update_dt,na.rm = T)
max(MI_docs$last_update_dt,na.rm = T)
names(MI_docs)
table(is.na(MI_docs$last_update_dt))
MI_docs$cert_date<- as.Date(MI_docs$`Certification Date`)
MI_docs$`Certification Date`[1:10]
MI_docs$cert_date<- as.Date(MI_docs$`Certification Date`,"%b/%d/%Y")
MI_docs$cert_date[1:10]
MI_docs$cert_date<- as.Date(MI_docs$`Certification Date`,"%m/%d/%Y")
MI_docs$cert_date[1:10]
min(MI_docs$cert_date)
min(MI_docs$cert_date,na.rm = T)
max(MI_docs$cert_date,na.rm = T)
names(race_data)
names(race_data1)
table(race_data1$ConceptName)
rpt99<-readRDS("~/CATHPCI_data_10_30_23/Quarterly RDS Data 2023q2/analytics.rpt99_pci5_report_discharge.rds")
rpt99<-readRDS("~/CATHPCI_data_10_30_23/Quarterly RDS Data 2023q2/analytics.rpt99_pci5_report_discharge.rds")
k<- duplicated(rpt99$visitoccurrencekey )
rpt99<- rpt99[!k,]
race_data2<- merge(tables[["vovisitoccurrence"]],
race_data1)
names(race_data1)
names(tables[["vovisitoccurrence"]])
race_data2<- merge(tables[["vovisitoccurrence"]],
race_data1)
names(race_data1)
names(tables[["vovisitoccurrence"]])
names(race_data1)<- tolower(names(race_data1))
race_data2<- merge(tables[["vovisitoccurrence"]],
race_data1)
length(unique(race_data1$clientpatientkey))
length(unique(tables[["vovisitoccurrence"]]$clientpatientkey))
dim(tables[["vovisistoccurrence"]])
dim(tables[["vovisitoccurrence"]])
library(tidyverse)
race_data2$val = 1
race_data3<- race_data2 %>% pivot_wider(id_cols = visitoccurrencekey,names_from = conceptname, values_from = val ,values_fn = max)
race_data3[is.na(race_data3)]<- 0
race_data3<- subset(race_data3, visitoccurrencekey %in% pci_v5$visitoccurrencekey)
table(rpt99$visitoccurrencekey %in% race_data3$visitoccurrencekey)
table(rpt99$hos_code,rpt99$visitoccurrencekey %in% race_data3$visitoccurrencekey)
table(rpt99$hos_code,rpt99$visitoccurrencekey %in% race_data3$visitoccurrencekey,rpt99$discharge_date >= as.Date("2018-04-01"))
table(rpt99$hos_code,rpt99$visitoccurrencekey %in% race_data2$visitoccurrencekey,rpt99$discharge_date >= as.Date("2018-04-01"))
table(rpt99$hos_code == 70)
## app.R ##
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
help.search("fluidRow")
table(race_data3$White,race_data3$`Black/African American`)
install.packages("shinydashboard")
install.packages("shinydashboard")
## app.R ##
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
table(rpt99$visitoccurrencekey %in% race_data3$visitoccurrencekey)
version_5<- subset(rpt99, discharge_date >= as.Date("2018-04-01"))
table(version_5$visitoccurrencekey %in% race_data3$visitoccurrencekey)
table(version_5$hos_code,version_5$visitoccurrencekey %in% race_data3$visitoccurrencekey)
names(race_data3)
version_5<- merge(version_5,race_data3)
table(version_5$Asian)
table(version_5$Asian,version_5$`Asian-Indian`)
table(version_5$Asian,version_5$Chinese)
table(version_5$Asian,version_5$Japanese)
table(version_5$Asian,version_5$Korean)
table(version_5$Asian,version_5$`Other Asian`)
mortality <- readRDS("~/pci prediction models/mortality.rds")
names(mortality)
mortality$terms
setwd("/media/milan/easystore/Git-cloned-repos/milannew/")
